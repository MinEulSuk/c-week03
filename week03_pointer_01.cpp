///*
//메모리의 4가지 종류
//코드 메모리 : 프로그램에서 작성된 코드가 기계어로 바뀌어서 올라가 있는 메모리 영역
//정적 메모리 (데이터 메모리) : 전역 변수, 정적 변수
//스택 메모리 : 지역 변수, 매개 변수
//힙 메모리 : 동적 할당(new) 후 메모리를 해제(delete)해야 함
//우리가 다루는 건 밑에 3개 
//코드를 하고 싶으면 깊게 공부해야함
//공부해도 길이 좁음
//
//정적은 다른 곳에서도 썼음
//힙은 쓰긴했는데 메모리 해제를 하지 않음
//정적메모리와 스택메모리의 메모리값은 서로 다름
//*/
//
//#include <iostream>
//using namespace std;
//// 지역 변수 매개변수라 스택메모리에 들어감
//int d = 88;//전역 변수
//
//void test(int b) {
//	int c = 2;
//	cout << &b << "\n"; //스택메모리 출력
//	cout << &c << "\n";
//}
//
//int main() {
//	int a = 9;
//	int* pa = &a;
//	static int e = 21;  //정적변수
//	cout << &a << "\n"; //스택메모리 출력
//	cout << &d << "\n"; //정적메모리 출력
//	cout << *pa << '\n';//포인터 의 주소의 실제 값 출력
//	cout << pa << '\n';//포인터의 주소 값 출력
//	test(7);
//	int* f = new int;//heap memory allocation
//	cout << &f << "\n";//(스택 메모리 번지수 출력)
//	cout << f << "\n";//힙 메모리 번지수 출력
//	*pa = -19;
//	cout << a << "\n";// pa와 a의 메모리 번지수가 동일하기떄문에
//	//a의 값은 -19가 됨
//	cout << &e << "\n"; //정적메모리 출력
//	delete f; // free heap memory 자바,c#은 가비지 컬렉터가 알아서 지워줌
//			//delete를 하지않으면 메모리 한공간이 계속 안치워져서
//			// 다른 프로그램이 쓸 수 없음 : 메모리 누수
//
//	return 0;
//}
//
//
//
//
//
